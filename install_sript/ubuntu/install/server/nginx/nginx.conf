user root;
worker_processes auto;
pid /run/nginx.pid;

events {
	worker_connections 768;
	# multi_accept on;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_timeout 65;
	types_hash_max_size 2048;
	# server_tokens off;

	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##

	access_log /var/log/nginx/access.log;
	error_log /var/log/nginx/error.log;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

	##
	# Virtual Host Configs
	##

	#include /etc/nginx/conf.d/*.conf;
	#include /etc/nginx/sites-enabled/*;

	upstream school_app_server {
	  server unix:/srv/webapps/school_django/run/gunicorn.sock fail_timeout=0;
	}

	map $http_upgrade $connection_upgrade {
	      default upgrade;
	      ''      close;
	    }


	server {

	    listen   80;
	    server_name 127.0.0.1;

	    client_max_body_size 4G;

	    access_log /srv/webapps/school_django/logs/nginx-access.log;
	    error_log /srv/webapps/school_django/logs/nginx-error.log;

	    location /shiny/ {
	      rewrite ^/shiny/(.*)$ /$1 break;
	      proxy_pass http://localhost:3838;
	      proxy_redirect http://localhost:3838/ $scheme://$host/shiny/;
	      proxy_http_version 1.1;
	      proxy_set_header Upgrade $http_upgrade;
	      proxy_set_header Connection $connection_upgrade;
	      proxy_read_timeout 20d;
	    }

	    location /static/ {
	        alias   /srv/webapps/school_django/static/;
	    }
	    
	    location /media/ {
	        alias   /srv/webapps/school_django/media/;
	    }

	    location / {
	        # an HTTP header important enough to have its own Wikipedia entry:
	        #   http://en.wikipedia.org/wiki/X-Forwarded-For
	        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

	        # enable this if and only if you use HTTPS, this helps Rack
	        # set the proper protocol for doing redirects:
	        # proxy_set_header X-Forwarded-Proto https;

	        # pass the Host: header from the client right along so redirects
	        # can be set properly within the Rack application
	        proxy_set_header Host $http_host;

	        # we don't want nginx trying to do something clever with
	        # redirects, we set the Host: header above already.
	        proxy_redirect off;

	        # set "proxy_buffering off" *only* for Rainbows! when doing
	        # Comet/long-poll stuff.  It's also safe to set if you're
	        # using only serving fast clients with Unicorn + nginx.
	        # Otherwise you _want_ nginx to buffer responses to slow
	        # clients, really.
	        # proxy_buffering off;

	        # Try to serve static files from nginx, no point in making an
	        # *application* server like Unicorn/Rainbows! serve static files.
	        if (!-f $request_filename) {
	            proxy_pass http://school_app_server;
	            break;
	        }
	    }

	    # Error pages
	    error_page 500 502 503 504 /500.html;
	    location = /500.html {
	        root /srv/webapps/school_django/static/;
	    }
	}

}
